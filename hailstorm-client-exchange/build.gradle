import java.time.Instant

plugins {
	id 'org.springframework.boot' version '2.2.1.RELEASE'
	id 'io.spring.dependency-management' version '1.0.8.RELEASE'
	id 'com.palantir.docker' version '0.22.1'
	id 'java'
	id 'jacoco'
}

group = 'com.3pillarglobal.labs'
version = '1.0.0'
sourceCompatibility = '1.8'

configurations {
	developmentOnly
	runtimeClasspath {
		extendsFrom developmentOnly
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-rsocket'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis-reactive'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	compile 'io.lettuce:lettuce-core:5.2.2.RELEASE'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testImplementation 'io.projectreactor:reactor-test'
}

test {
	useJUnitPlatform()
}

docker {
	name "${System.getenv("DOCKER_ID")}/${bootJar.baseName}:${version}"
	copySpec.from(tasks.bootJar.outputs.files.singleFile).into("build")
	buildArgs([JAR_FILE: "build/*.jar"])
	labels([
		"org.opencontainers.image.created": Date.from(Instant.now())
												.format("yyyy-MM-dd'T'Hms.SZ", TimeZone.getTimeZone("UTC")),
		"org.opencontainers.image.revision": System.getenv("TRAVIS_COMMIT") || "",
		"org.opencontainers.image.licenses": "MIT",
		"org.opencontainers.image.title": rootProject.name
	])
}

jacocoTestReport {
	reports {
		xml.enabled true
		html.enabled false
	}
}
